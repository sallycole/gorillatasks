~/Gorilla-Tasks$ python -m unittest tests/test_task_actions.py -v
2024-12-18 02:44:32,739 - app - INFO - Registered blueprints: auth, curriculum, dashboard
2024-12-18 02:44:34,734 - app - INFO - Database tables created successfully
2024-12-18 02:44:34,734 - app - INFO - Available routes:
2024-12-18 02:44:34,735 - app - DEBUG - Route: /static/<path:filename> -> static [OPTIONS,GET,HEAD]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /auth/login -> auth.login [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /auth/register -> auth.register [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /auth/logout -> auth.logout [OPTIONS,GET,HEAD]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /curriculum/ -> curriculum.list [OPTIONS,GET,HEAD]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /curriculum/new -> curriculum.new [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /curriculum/<int:id> -> curriculum.view [OPTIONS,GET,HEAD]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /curriculum/<int:id>/edit -> curriculum.edit [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /curriculum/<int:id>/enroll -> curriculum.enroll [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /dashboard/ -> dashboard.index [OPTIONS,GET,HEAD]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /dashboard/task/<int:id>/start -> dashboard.start_task [OPTIONS,POST]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /dashboard/task/<int:id>/finish -> dashboard.finish_task [OPTIONS,POST]
2024-12-18 02:44:34,735 - app - DEBUG - Route: /dashboard/task/<int:id>/skip -> dashboard.skip_task [OPTIONS,POST]
2024-12-18 02:44:34,735 - app - DEBUG - Route: / -> root [OPTIONS,GET,HEAD]
2024-12-18 02:44:34,735 - app - INFO - Blueprints registered successfully
2024-12-18 02:44:34,735 - app - DEBUG - Complete URL map:
2024-12-18 02:44:34,735 - app - DEBUG - Map([<Rule '/static/<filename>' (OPTIONS, GET, HEAD) -> static>,
 <Rule '/auth/login' (OPTIONS, HEAD, GET, POST) -> auth.login>,
 <Rule '/auth/register' (OPTIONS, HEAD, GET, POST) -> auth.register>,
 <Rule '/auth/logout' (OPTIONS, GET, HEAD) -> auth.logout>,
 <Rule '/curriculum/' (OPTIONS, GET, HEAD) -> curriculum.list>,
 <Rule '/curriculum/new' (OPTIONS, HEAD, GET, POST) -> curriculum.new>,
 <Rule '/curriculum/<id>' (OPTIONS, GET, HEAD) -> curriculum.view>,
 <Rule '/curriculum/<id>/edit' (OPTIONS, HEAD, GET, POST) -> curriculum.edit>,
 <Rule '/curriculum/<id>/enroll' (OPTIONS, HEAD, GET, POST) -> curriculum.enroll>,
 <Rule '/dashboard/' (OPTIONS, GET, HEAD) -> dashboard.index>,
 <Rule '/dashboard/task/<id>/start' (OPTIONS, POST) -> dashboard.start_task>,
 <Rule '/dashboard/task/<id>/finish' (OPTIONS, POST) -> dashboard.finish_task>,
 <Rule '/dashboard/task/<id>/skip' (OPTIONS, POST) -> dashboard.skip_task>,
 <Rule '/' (OPTIONS, GET, HEAD) -> root>])
test_start_task (tests.test_task_actions.TestTaskActions.test_start_task) ... 2024-12-18 02:44:34,743 - app - INFO - Registered blueprints: auth, curriculum, dashboard
2024-12-18 02:44:36,675 - app - INFO - Database tables created successfully
2024-12-18 02:44:36,675 - app - INFO - Available routes:
2024-12-18 02:44:36,676 - app - DEBUG - Route: /static/<path:filename> -> static [OPTIONS,GET,HEAD]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /auth/login -> auth.login [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /auth/register -> auth.register [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /auth/logout -> auth.logout [OPTIONS,GET,HEAD]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /curriculum/ -> curriculum.list [OPTIONS,GET,HEAD]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /curriculum/new -> curriculum.new [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /curriculum/<int:id> -> curriculum.view [OPTIONS,GET,HEAD]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /curriculum/<int:id>/edit -> curriculum.edit [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /curriculum/<int:id>/enroll -> curriculum.enroll [OPTIONS,HEAD,GET,POST]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /dashboard/ -> dashboard.index [OPTIONS,GET,HEAD]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /dashboard/task/<int:id>/start -> dashboard.start_task [OPTIONS,POST]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /dashboard/task/<int:id>/finish -> dashboard.finish_task [OPTIONS,POST]
2024-12-18 02:44:36,676 - app - DEBUG - Route: /dashboard/task/<int:id>/skip -> dashboard.skip_task [OPTIONS,POST]
2024-12-18 02:44:36,676 - app - DEBUG - Route: / -> root [OPTIONS,GET,HEAD]
2024-12-18 02:44:36,676 - app - INFO - Blueprints registered successfully
2024-12-18 02:44:36,676 - app - DEBUG - Complete URL map:
2024-12-18 02:44:36,676 - app - DEBUG - Map([<Rule '/static/<filename>' (OPTIONS, GET, HEAD) -> static>,
 <Rule '/auth/login' (OPTIONS, HEAD, GET, POST) -> auth.login>,
 <Rule '/auth/register' (OPTIONS, HEAD, GET, POST) -> auth.register>,
 <Rule '/auth/logout' (OPTIONS, GET, HEAD) -> auth.logout>,
 <Rule '/curriculum/' (OPTIONS, GET, HEAD) -> curriculum.list>,
 <Rule '/curriculum/new' (OPTIONS, HEAD, GET, POST) -> curriculum.new>,
 <Rule '/curriculum/<id>' (OPTIONS, GET, HEAD) -> curriculum.view>,
 <Rule '/curriculum/<id>/edit' (OPTIONS, HEAD, GET, POST) -> curriculum.edit>,
 <Rule '/curriculum/<id>/enroll' (OPTIONS, HEAD, GET, POST) -> curriculum.enroll>,
 <Rule '/dashboard/' (OPTIONS, GET, HEAD) -> dashboard.index>,
 <Rule '/dashboard/task/<id>/start' (OPTIONS, POST) -> dashboard.start_task>,
 <Rule '/dashboard/task/<id>/finish' (OPTIONS, POST) -> dashboard.finish_task>,
 <Rule '/dashboard/task/<id>/skip' (OPTIONS, POST) -> dashboard.skip_task>,
 <Rule '/' (OPTIONS, GET, HEAD) -> root>])
2024-12-18 02:44:37,913 - routes - INFO - Starting task 1 for user 1
/home/runner/Gorilla-Tasks/.pythonlibs/lib/python3.11/site-packages/flask_sqlalchemy/query.py:30: LegacyAPIWarning: The Query.get() method is considered legacy as of the 1.x series of SQLAlchemy and becomes a legacy construct in 2.0. The method is now available as Session.get() (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
  rv = self.get(ident)
2024-12-18 02:44:38,001 - routes - INFO - Created new student task for task 1
2024-12-18 02:44:38,164 - routes - INFO - Successfully started task 1
ok

----------------------------------------------------------------------
Ran 1 test in 4.602s

OK